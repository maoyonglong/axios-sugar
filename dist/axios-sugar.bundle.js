var axiosSugar=function(f){"use strict";f=f&&f.hasOwnProperty("default")?f.default:f;function c(e,n,r){if(void 0===e&&(e=1),1!==e)return r[n].rid;var t=JSON.parse(JSON.stringify(r));return delete t.headers,delete t.timeout,delete t.transformRequest,delete t.transformResponse,delete t.xsrfCookieName,delete t.xsrfHeaderName,delete t["X-XSRF-TOKEN"],delete t.maxContentLength,delete t[n],JSON.stringify(t)}var n={resend:!1,resendDelay:200,resendNum:3,compareRule:1,store:!1};var u={data:{},save:function(e,n){this.data[e]=n},get:function(e){return this.data[e]},contains:function(e){return void 0!==this.data[e]}},r={requestConfigs:[],config:n,axiosInstance:null,injectProp:"reqConf",clear:function(){var n=this;this.requestConfigs.forEach(function(e){e[n.injectProp].cancelTokenSource.cancel()})},getStore:function(){return u},setConfig:function(e){this.config=function(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var s=JSON.parse(JSON.stringify(e));return n.forEach(function(e){for(var n=0,r=Object.keys(e);n<r.length;n++){var t=r[n];s[t]=e[t]}}),s}(n,e)},injectReqConfig:function(e){var n=this.config.resend,r=this.injectProp;return n&&!e[r].resendCount&&(e[r].resendCount=0),e[r].cancelTokenSource=f.CancelToken.source(),e},beforeRequest:function(){var i=this;f.interceptors.request.use(function(e){var n=i.config,r=n.compareRule,t=n.store,s=i.injectProp;if(e[s]=e[s]||{},t){var o=c(r,s,e);if(u.contains(o))return Promise.reject({reason:"saved",message:"this request has been saved.",res:u.get(o)})}return function(e,n,r,t){void 0===e&&(e=1);for(var s=c(e,n,r),o=0,i=Object.values(t);o<i.length;o++){var a=i[o];if(s===c(e,n,a))return!0}return!1}(r,s,e,i.requestConfigs)?Promise.reject({reason:"existed",message:"a same request has been already sent, waiting for response."}):(e=i.injectReqConfig(e),i.requestConfigs.push(e),Promise.resolve(e))},function(e){Promise.reject(e)})},beforeResponse:function(){f.interceptors.response.use(this.beforeSuccess.bind(this),this.beforeError.bind(this))},beforeSuccess:function(e){var n=this.config,r=n.compareRule,t=n.store,s=this.requestConfigs,o=e.config,i=c(r,this.injectProp,o),a=s.indexOf(o);s.splice(a,1),t&&(u.contains(i)||u.save(i,e));return Promise.resolve(e)},beforeError:function(e){if(!e.reason){var n,r=this.config,t=r.resend,s=r.resendDelay,o=r.resendNum,i=e.response.config,a=this.axiosInstance||f,c=this.requestConfigs,u=c.indexOf(i);return c.splice(u,1),t&&i[this.injectProp].resendCount<o&&(i[this.injectProp].resendCount++,setTimeout(function(){a.request(i)},s)),Promise.reject(e)}this["on"+((n=e.reason).substring(0,1).toUpperCase()+n.substring(1))].call(this,e)}};return["Saved","Existed"].forEach(function(e){r["on"+e]=function(e){console.log("[No Send]: "+e.reason+" - "+e.message)}}),r.beforeRequest.bind(r)(),r.beforeResponse.bind(r)(),r}(axios);
